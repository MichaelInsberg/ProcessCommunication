# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = true

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true

# this. and Me. preferences
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
dotnet_style_coalesce_expression = false:warning
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = false:warning
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_auto_properties = false:warning
dotnet_style_prefer_compound_assignment = false:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = false:warning
dotnet_style_prefer_conditional_expression_over_return = false:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = false:warning
dotnet_style_prefer_inferred_tuple_names = false:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:warning

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere =true:silent
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent =true:silent

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_indexers = false:suggestion
csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = false:suggestion
csharp_style_expression_bodied_properties = true:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = false:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = false:suggestion
csharp_style_prefer_switch_expression = false:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = false:warning

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = true:warning
csharp_prefer_simple_using_statement = false:warning

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = false:warning
csharp_style_inlined_variable_declaration = false:warning
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_prefer_index_operator = false:warning
csharp_style_prefer_range_operator = false:warning
csharp_style_throw_expression = false:warning
csharp_style_unused_value_assignment_preference = discard_variable:warning
csharp_style_unused_value_expression_statement_preference = discard_variable:warning

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:warning

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Naming styles ####

# Naming rules

dotnet_naming_rule.type_should_be_pascal_case.severity = warning
dotnet_naming_rule.type_should_be_pascal_case.symbols = type
dotnet_naming_rule.type_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.class_should_be_pascal_case.severity = warning
dotnet_naming_rule.class_should_be_pascal_case.symbols = class
dotnet_naming_rule.class_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.abstract_class_should_be_ends_with_base.severity = warning
dotnet_naming_rule.abstract_class_should_be_ends_with_base.symbols = abstract_class
dotnet_naming_rule.abstract_class_should_be_ends_with_base.style = ends_with_base

dotnet_naming_rule.interface_should_be_starts_with_i.severity = warning
dotnet_naming_rule.interface_should_be_starts_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_starts_with_i.style = starts_with_i

dotnet_naming_rule.enum_should_be_pascal_case.severity = warning
dotnet_naming_rule.enum_should_be_pascal_case.symbols = enum
dotnet_naming_rule.enum_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.property_should_be_pascal_case.severity = warning
dotnet_naming_rule.property_should_be_pascal_case.symbols = property
dotnet_naming_rule.property_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.method_should_be_pascal_case.severity = warning
dotnet_naming_rule.method_should_be_pascal_case.symbols = method
dotnet_naming_rule.method_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.const_field_should_be_uppercase_with_underscores.severity = warning
dotnet_naming_rule.const_field_should_be_uppercase_with_underscores.symbols = const_field
dotnet_naming_rule.const_field_should_be_uppercase_with_underscores.style = uppercase_with_underscores

dotnet_naming_rule.local_field_should_be_camel_case.severity = warning
dotnet_naming_rule.local_field_should_be_camel_case.symbols = local_field
dotnet_naming_rule.local_field_should_be_camel_case.style = camel_case

dotnet_naming_rule.async_method_should_be_ends_with_async.severity = warning
dotnet_naming_rule.async_method_should_be_ends_with_async.symbols = async_method
dotnet_naming_rule.async_method_should_be_ends_with_async.style = ends_with_async

# Symbol specifications

dotnet_naming_symbols.class.applicable_kinds = class
dotnet_naming_symbols.class.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.class.required_modifiers = 

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.enum.applicable_kinds = enum
dotnet_naming_symbols.enum.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.enum.required_modifiers = 

dotnet_naming_symbols.property.applicable_kinds = property
dotnet_naming_symbols.property.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.property.required_modifiers = 

dotnet_naming_symbols.abstract_class.applicable_kinds = class
dotnet_naming_symbols.abstract_class.applicable_accessibilities = *
dotnet_naming_symbols.abstract_class.required_modifiers = abstract

dotnet_naming_symbols.method.applicable_kinds = method
dotnet_naming_symbols.method.applicable_accessibilities = *
dotnet_naming_symbols.method.required_modifiers = 

dotnet_naming_symbols.type.applicable_kinds = namespace, class, struct, enum
dotnet_naming_symbols.type.applicable_accessibilities = *
dotnet_naming_symbols.type.required_modifiers = 

dotnet_naming_symbols.private_field.applicable_kinds = field
dotnet_naming_symbols.private_field.applicable_accessibilities = private
dotnet_naming_symbols.private_field.required_modifiers = 

dotnet_naming_symbols.local_field.applicable_kinds = field
dotnet_naming_symbols.local_field.applicable_accessibilities = local
dotnet_naming_symbols.local_field.required_modifiers = 

dotnet_naming_symbols.const_field.applicable_kinds = field, local, enum
dotnet_naming_symbols.const_field.applicable_accessibilities = *
dotnet_naming_symbols.const_field.required_modifiers = const

dotnet_naming_symbols.async_method.applicable_kinds = method
dotnet_naming_symbols.async_method.applicable_accessibilities = *
dotnet_naming_symbols.async_method.required_modifiers = async

# Naming styles

dotnet_naming_style.camel_case.required_prefix = 
dotnet_naming_style.camel_case.required_suffix = 
dotnet_naming_style.camel_case.word_separator = 
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.starts_with_i.required_prefix = I
dotnet_naming_style.starts_with_i.required_suffix = 
dotnet_naming_style.starts_with_i.word_separator = 
dotnet_naming_style.starts_with_i.capitalization = pascal_case

dotnet_naming_style.ends_with_base.required_prefix = 
dotnet_naming_style.ends_with_base.required_suffix = Base
dotnet_naming_style.ends_with_base.word_separator = 
dotnet_naming_style.ends_with_base.capitalization = pascal_case

dotnet_naming_style.uppercase_with_underscores.required_prefix = 
dotnet_naming_style.uppercase_with_underscores.required_suffix = 
dotnet_naming_style.uppercase_with_underscores.word_separator = _
dotnet_naming_style.uppercase_with_underscores.capitalization = all_upper

dotnet_naming_style.ends_with_async.required_prefix = 
dotnet_naming_style.ends_with_async.required_suffix = Async
dotnet_naming_style.ends_with_async.word_separator = 
dotnet_naming_style.ends_with_async.capitalization = pascal_case

# IDE1006: Naming Styles
dotnet_diagnostic.IDE1006.severity = warning
dotnet_diagnostic.AsyncFixer01.severity = silent

# CS8767: Die NULL-Zulässigkeit von Verweistypen im Typ des Parameters entspricht (möglicherweise aufgrund von Attributen für die NULL-Zulässigkeit) nicht dem implizit implementierten Member.
dotnet_diagnostic.CS8767.severity = silent

# CS8601: Mögliche Nullverweiszuweisung.
dotnet_diagnostic.CS8601.severity = silent

# CS8602: Dereferenzierung eines möglichen Nullverweises.
dotnet_diagnostic.CS8602.severity = silent

# CS8604: Mögliches Nullverweisargument.
dotnet_diagnostic.CS8604.severity = silent

# SYSLIB0003: Typ oder Element ist veraltet
dotnet_diagnostic.SYSLIB0003.severity = silent

# SYSLIB0011: Typ oder Element ist veraltet
dotnet_diagnostic.SYSLIB0011.severity = silent

# SYSLIB0021: Typ oder Element ist veraltet
dotnet_diagnostic.SYSLIB0021.severity = silent

# SYSLIB0023: Typ oder Element ist veraltet
dotnet_diagnostic.SYSLIB0023.severity = silent

# SYSLIB0027: Typ oder Element ist veraltet
dotnet_diagnostic.SYSLIB0027.severity = silent

# SYSLIB0028: Typ oder Element ist veraltet
dotnet_diagnostic.SYSLIB0028.severity = silent

# CS8600: Das NULL-Literal oder ein möglicher NULL-Wert wird in einen Non-Nullable-Typ konvertiert.
dotnet_diagnostic.CS8600.severity = silent

# CS8622: Die NULL-Zulässigkeit von Verweistypen im Typ des Parameters entspricht (möglicherweise aufgrund von Attributen für die NULL-Zulässigkeit) nicht dem Zieldelegaten.
dotnet_diagnostic.CS8622.severity = silent

# CA1416: Plattformkompatibilität überprüfen
dotnet_diagnostic.CA1416.severity = none

# CA1822: Member als statisch markieren
dotnet_diagnostic.CA1822.severity = none
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
[*.{cs,vb}]
dotnet_style_coalesce_expression = false:warning
dotnet_style_null_propagation = false:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_auto_properties = false:warning
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = false:warning
dotnet_style_prefer_conditional_expression_over_return = false:warning
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf